/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.nolanlab.scaleinvdbc;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.Map.Entry;
import javax.swing.JFileChooser;
import javax.swing.SwingWorker;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
import samusik.glasscmp.GlassFrame;
import samusik.glasscmp.GlassTableHeader;
import util.DefaultEntry;

/**
 *
 * @author Nikolay
 */
public class frmMain extends GlassFrame {

    public static boolean batchMode = false;
    /**
     * Creates new form frmMain
     */
    public static final String strAdd = "Double-click to add file";
    private boolean pauseChListener = false;

    public frmMain() {
        initComponents();

        boolean test = true;
        if (test) {
            pauseChListener = true;
            ((DefaultTableModel) table.getModel()).removeRow(0);
            ((DefaultTableModel) table.getModel()).addRow(new String[]{"D:\\OC Run1 FilesToDBC\\20140826_OC_Run1_tumor1-concat_normalized.fcs", "D:\\OC Run1 FilesToDBC\\Debarcode_key_OC-Bigexp-run1_25082014.csv"});
            ((DefaultTableModel) table.getModel()).addRow(new String[]{strAdd, ""});
            pauseChListener = false;
            chkNormalize.setSelected(false);
            glassEdit1.setText("D:\\OC Run1 FilesToDBC\\out_filtered");
        }

        FileEditor f = new FileEditor();
        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            table.getColumnModel().getColumn(i).setCellEditor(f);
            table.getColumnModel().getColumn(i).setHeaderRenderer(new GlassTableHeader(table.getTableHeader()));
        }

        table.getModel().addTableModelListener((TableModelEvent e) -> {
            if (pauseChListener) {
                return;
            }
            if (!table.getModel().getValueAt(table.getModel().getRowCount() - 1, 0).equals(strAdd)) {
                pauseChListener = true;
                ((DefaultTableModel) table.getModel()).addRow(new String[]{strAdd, ""});
                pauseChListener = false;
            }
        });
        jProgressBar1.setVisible(false);

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        double widthScr = screenSize.getWidth();
        double heightScr = screenSize.getHeight();

        double w = widthScr * 0.8;
        double h = heightScr * 0.8;

        this.setBounds((int) ((widthScr - w) / 2), (int) ((heightScr - h) / 2), (int) w, (int) h);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jProgressBar1 = new javax.swing.JProgressBar();
        glassButton1 = new samusik.glasscmp.GlassButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        glassEdit1 = new samusik.glasscmp.GlassEdit();
        glassButton2 = new samusik.glasscmp.GlassButton();
        chkNormalize = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scale-invariant debarcoder");
        setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jProgressBar1.setMaximumSize(new java.awt.Dimension(32767, 20));
        jProgressBar1.setMinimumSize(new java.awt.Dimension(200, 20));
        jProgressBar1.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        getContentPane().add(jProgressBar1, gridBagConstraints);

        glassButton1.setText("Browse");
        glassButton1.setMaximumSize(new java.awt.Dimension(107, 30));
        glassButton1.setMinimumSize(new java.awt.Dimension(107, 30));
        glassButton1.setPreferredSize(new java.awt.Dimension(107, 30));
        glassButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                glassButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(glassButton1, gridBagConstraints);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Double-click to add file", null}
            },
            new String [] {
                "FCS File", "Debarcoding File"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("Ready");
        jScrollPane2.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jScrollPane2, gridBagConstraints);

        glassEdit1.setText("Output path...");
        glassEdit1.setToolTipText("");
        glassEdit1.setMinimumSize(new java.awt.Dimension(8, 30));
        glassEdit1.setPreferredSize(new java.awt.Dimension(79, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(glassEdit1, gridBagConstraints);

        glassButton2.setText("Run debarcoding");
        glassButton2.setMaximumSize(new java.awt.Dimension(107, 30));
        glassButton2.setMinimumSize(new java.awt.Dimension(107, 30));
        glassButton2.setPreferredSize(new java.awt.Dimension(107, 30));
        glassButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                glassButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        getContentPane().add(glassButton2, gridBagConstraints);

        chkNormalize.setText("Nomalize barcoding parameters to 0-1 range (helps when the signal in BC channels is uneven)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(chkNormalize, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void glassButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_glassButton1ActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setDialogTitle("Select output directory");
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            glassEdit1.setText(jfc.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_glassButton1ActionPerformed

    private void glassButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_glassButton2ActionPerformed
        jProgressBar1.setVisible(true);
        Entry<String, String>[] e = new Entry[table.getRowCount() - 1];
        for (int i = 0; i < e.length; i++) {
            e[i] = new DefaultEntry<>(table.getValueAt(i, 0).toString(), table.getValueAt(i, 1).toString());
        }

        SwingWorker sw = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                try {
                    new Debarcode().run(e, glassEdit1.getText(), chkNormalize.isSelected(), jTextArea1, jProgressBar1);
                } catch (Exception ex) {
                    StringWriter sw = new StringWriter();
                    PrintWriter pw = new PrintWriter(sw);
                    ex.printStackTrace(pw);
                    jTextArea1.setText(jTextArea1.getText() + "\n***ERROR***RUN ABORTED***" + sw.toString());
                    glassButton2.setText("Run Debarcoding");
                    glassButton2.setEnabled(true);
                }
                glassButton2.setText("Run Debarcoding");
                glassButton2.setEnabled(true);
                return null;
            }
        };
        glassButton2.setEnabled(false);
        glassButton2.setText("Running...");
        sw.execute();

    }//GEN-LAST:event_glassButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        if (args.length == 1) {
            batchMode = Boolean.parseBoolean(args[0]);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkNormalize;
    private samusik.glasscmp.GlassButton glassButton1;
    private samusik.glasscmp.GlassButton glassButton2;
    private samusik.glasscmp.GlassEdit glassEdit1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
